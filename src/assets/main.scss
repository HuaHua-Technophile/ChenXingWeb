// 导入Bootstrap
@use 'bootstrap/scss/bootstrap';

@use 'bootstrap-icons/font/bootstrap-icons.css';

@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/mixins';

/**
 * @description 全局背景色设置
 */
body {
  background: linear-gradient(135deg, #e6f0ff 0%, #c6d9f7 100%) !important;
  overflow-x: hidden;
  width: 100%;
  position: relative;
}

[data-bs-theme='dark'] body {
  background: linear-gradient(135deg, #0f2b5b 0%, #1a4a8c 100%) !important;
}

/**
 * @description 修复AOS动画可能导致的水平溢出问题
 */
[data-aos] {
  max-width: 100%;
  box-sizing: border-box;
}

/* 自定义AOS水平动画的偏移量，减小默认值避免溢出 */
[data-aos='fade-right'] {
  transform: translate3d(-50px, 0, 0) !important;
}

[data-aos='fade-left'] {
  transform: translate3d(50px, 0, 0) !important;
}

[data-aos='fade-right'].aos-animate {
  transform: translate3d(0, 0, 0) !important;
}

[data-aos='fade-left'].aos-animate {
  transform: translate3d(0, 0, 0) !important;
}

html {
  overflow-x: hidden;
  width: 100%;
}

/**
  * @description 鼠标指针样式类
  */
.cursor-pointer {
  cursor: pointer;
}

/**
  * @description 背景图片居中填充样式类
  */
.bgimg-center-cover {
  background-position: center !important;
  background-size: cover !important;
}

.bgimg-mask {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(var(--bs-body-bg-rgb), 0.4);
    z-index: 0;
  }
}

/**
  * @description 过渡效果类
  */
// 定义过渡时间变量 - 使用数组
$transition-times: (250, 500, 750, 1000, 1250, 1500);

// 生成过渡效果类
@each $time in $transition-times {
  .transition-#{$time} {
    transition: all #{$time}ms;
  }
}

/**
  * @description z-index层级类
  */
// 生成z-index层级类
@for $level from 1 through 5 {
  .z-index-#{$level} {
    z-index: $level !important;
  }
}

/**
  * @description 响应式定位类
  */
$positions: static, relative, absolute, fixed, sticky;
$breakpoints: sm, md, lg, xl, xxl;

@each $breakpoint in $breakpoints {
  @include media-breakpoint-up($breakpoint) {
    @each $position in $positions {
      .position-#{$breakpoint}-#{$position} {
        position: $position !important;
      }
    }
  }
}

/**
  * @description 响应式字体大小类扩展
  */
// 定义响应式字体大小变量
$fs-sizes: (
  1: 2.5rem,
  // 相当于h1
  2: 2rem,
  // 相当于h2
  3: 1.75rem,
  // 相当于h3
  4: 1.5rem,
  // 相当于h4
  5: 1.25rem,
  // 相当于h5
  6: 1rem,
  // 相当于h6
  7: 0.875rem,
  // 小号字体(14px)
  8: 0.75rem,
  // 更小字体(12px)
  9: 0.625rem,
  // 极小字体(10px)
  10: 0.5rem, // 微小字体(8px)
);

// 默认断点 - 创建基础的字体大小类
@each $key, $value in $fs-sizes {
  .fs-#{$key} {
    font-size: $value !important;
  }
}

// 使用嵌套循环为所有断点生成字体大小类
@each $breakpoint in $breakpoints {
  @include media-breakpoint-up($breakpoint) {
    @each $key, $value in $fs-sizes {
      .fs-#{$breakpoint}-#{$key} {
        font-size: $value !important;
      }
    }
  }
}
/* 卡片悬停时背景动画效果 */
.card {
  &::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0;
    background-color: var(--bs-primary-bg-subtle);
    opacity: 0.9;
    transition: height 0.4s;
    z-index: -1;
    border-radius: inherit;
  }

  &:hover {
    &::before {
      height: 100%;
    }

    .icon-rotate {
      transform: rotateY(180deg);
    }
  }
}
.hover-up {
  &:hover {
    transition-delay: 0 !important;
    transform: translateY(-8px) !important;
  }
}

/**
  * @description 模糊滤镜效果类
  */
// 生成不同程度的backdrop-filter模糊效果
@for $blur from 1 through 15 {
  .blur-#{$blur} {
    backdrop-filter: blur(#{$blur}px);
    -webkit-backdrop-filter: blur(#{$blur}px);
  }
}
